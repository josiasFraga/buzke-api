ALTER TABLE `usuarios_dados_padel`
	ADD COLUMN `img` VARCHAR(150) NULL DEFAULT NULL AFTER `lado`,
	ADD COLUMN `img_capa` VARCHAR(150) NULL DEFAULT NULL AFTER `img`,
	DROP INDEX `usuario_id_lado`,
	ADD UNIQUE INDEX `usuario_id_lado` (`usuario_id`) USING BTREE;
/* Informação: Records: 0  Duplicates: 0  Warnings: 0 */


ALTER TABLE `clientes_clientes`
	ADD COLUMN `data_nascimento` DATE NULL DEFAULT NULL AFTER `cep`;


    ALTER TABLE `usuarios`
	CHANGE COLUMN `img` `img` VARCHAR(200) NULL DEFAULT 'thumb_user.png' COLLATE 'utf8mb3_general_ci' AFTER `nome`;


UPDATE usuarios SET img = CONCAT('https://buzke-images.s3.sa-east-1.amazonaws.com/users/', 'thumb_user.png') WHERE img = 'thumb_user.png';



ALTER TABLE `clientes`
	CHANGE COLUMN `logo` `logo` VARCHAR(200) NULL DEFAULT 'sem-imagem.jpg' COLLATE 'utf8mb3_general_ci' AFTER `cnpj`;



ALTER TABLE `clientes`
	CHANGE COLUMN `logo` `logo` VARCHAR(200) NULL DEFAULT 'https://buzke-images.s3.sa-east-1.amazonaws.com/business/sem-imagem.jpg' COLLATE 'utf8mb3_general_ci' AFTER `cnpj`;



ALTER TABLE `usuarios`
    CHANGE COLUMN `img` `img` VARCHAR(200) NULL DEFAULT 'https://buzke-images.s3.sa-east-1.amazonaws.com/users/thumb_user.png' COLLATE 'utf8mb3_general_ci' AFTER `nome`;



ALTER TABLE `clientes_clientes`
	CHANGE COLUMN `img` `img` VARCHAR(200) NULL DEFAULT 'https://buzke-images.s3.sa-east-1.amazonaws.com/client/thumb_user.png' COLLATE 'utf8mb3_general_ci' AFTER `nacionalidade`;




UPDATE clientes_clientes SET img = CONCAT('https://buzke-images.s3.sa-east-1.amazonaws.com/client/', 'thumb_user.png') WHERE img = 'thumb_user.png';




UPDATE clientes SET logo = CONCAT('https://buzke-images.s3.sa-east-1.amazonaws.com/business/', clientes.logo);




UPDATE torneios SET img = CONCAT('https://buzke-images.s3.sa-east-1.amazonaws.com/tournaments/', img);



ALTER TABLE `cliente_servico_fotos`
	CHANGE COLUMN `imagem` `imagem` VARCHAR(200) NOT NULL COLLATE 'utf8mb4_general_ci' AFTER `cliente_servico_id`;



UPDATE cliente_servico_fotos SET imagem = CONCAT('https://buzke-images.s3.sa-east-1.amazonaws.com/services/', imagem);


ALTER TABLE `usuarios`
	ADD COLUMN `usuario` VARCHAR(80) NULL DEFAULT NULL AFTER `nome`;




UPDATE usuarios u
LEFT JOIN clientes c ON u.cliente_id = c.id
SET u.usuario = CONCAT(
  '@',
  REGEXP_REPLACE(
    -- Substituição de cada grupo de caracteres acentuados
    REGEXP_REPLACE(
      REGEXP_REPLACE(
        REGEXP_REPLACE(
          REGEXP_REPLACE(
            REGEXP_REPLACE(
                          REGEXP_REPLACE(
                            CASE 
                              WHEN u.cliente_id IS NOT NULL THEN c.nome
                              ELSE u.nome
                            END
                        , '[áàâãä]', 'a')       -- a minúsculo
                    , '[éèêë]', 'e')           -- e minúsculo
                , '[íìîï]', 'i')               -- i minúsculo
            , '[óòôõö]', 'o')                 -- o minúsculo
        , '[úùûü]', 'u')                      -- u minúsculo
    , '[ç]', 'c'),                            -- ç minúsculo
    
    -- Por último, remove qualquer caractere que não seja alfanumérico
    '[^a-zA-Z0-9]', ''
  )
);






SET @count := 0;
SET @prev_usuario := '';  -- Variável para armazenar o valor do usuário anterior

UPDATE usuarios u1
JOIN (
    SELECT id, usuario, 
           @count := IF(@prev_usuario = usuario, @count + 1, 1) AS seq,  -- Reinicia o contador para duplicados
           @prev_usuario := usuario
    FROM usuarios
    ORDER BY usuario, id  -- Ordena pelo usuario e id para garantir que os duplicados sejam contados corretamente
) u2 ON u1.id = u2.id
SET u1.usuario = CONCAT(u2.usuario, IF(u2.seq > 1, u2.seq, ''))  -- Aplica o contador apenas para duplicados
WHERE u2.seq > 1;  -- Aplica apenas para os duplicados



ALTER TABLE `usuarios`
	ADD UNIQUE INDEX `usuario` (`usuario`),
	ADD UNIQUE INDEX `email` (`email`);



ALTER TABLE `subcategorias`
	ADD COLUMN `icone` VARCHAR(50) NULL DEFAULT NULL AFTER `mostrar_no_to_pro_jogo`,
	ADD COLUMN `cena_criacao_perfil` VARCHAR(80) NULL DEFAULT NULL AFTER `icone`;


ALTER TABLE `usuarios_dados_padel`
	ADD COLUMN `privado` ENUM('Y','N') NOT NULL DEFAULT 'N' AFTER `img_capa`;


ALTER TABLE usuarios ADD FULLTEXT idx_fulltext_usuario_nome_email (usuario, nome, email);


ALTER TABLE `usuarios_dados_padel`
	ADD COLUMN `dupla_fixa` INT NULL DEFAULT NULL AFTER `privado`;


ALTER TABLE `usuarios_dados_padel`
	ADD COLUMN `dupla_fixa` INT NULL DEFAULT NULL AFTER `privado`,
	ADD COLUMN `dupla_fixa_aprovado` ENUM('Y','N') NULL DEFAULT NULL AFTER `dupla_fixa`,
	ADD CONSTRAINT `FK_usuarios_dados_padel_usuarios_2` FOREIGN KEY (`dupla_fixa`) REFERENCES `usuarios` (`id`) ON UPDATE CASCADE ON DELETE CASCADE;


ALTER TABLE `notificacoes_motivos`
	ADD COLUMN `acao_usuario` VARCHAR(50) NULL DEFAULT NULL AFTER `msg_notificacao`;

INSERT INTO `buzke_v2`.`notificacoes_motivos` (`created`, `titulo`, `nome`, `grupo`, `titulo_notificacao`, `msg_notificacao`) VALUES ('2024-12-28 21:28:04', 'Adicionou voce Como Dupla fixa de Padel', 'dupla_fixa_padel', 'dupla_padel', 'Voce foi adicionado como dupla fixa de padel', '{{usuario_nome}} adicionou você como dupla fixa. Deseja confirmar essa parceria?');


ALTER TABLE `notificacoes`
	ADD COLUMN `big_picture` VARCHAR(200) NULL DEFAULT NULL AFTER `json`;


ALTER TABLE `notificacoes`
	ADD COLUMN `large_icon` VARCHAR(200) NULL DEFAULT NULL AFTER `big_picture`;

ALTER TABLE `notificacoes`
	ADD COLUMN `acao_selecionada` VARCHAR(20) NULL DEFAULT NULL AFTER `large_icon`;


ALTER TABLE `notificacoes`
	ADD COLUMN `usuario_origem` VARCHAR(20) NULL DEFAULT NULL AFTER `acao_selecionada`;

ALTER TABLE `notificacoes`
	CHANGE COLUMN `usuario_origem` `usuario_origem` INT NULL DEFAULT NULL COLLATE 'latin1_swedish_ci' AFTER `acao_selecionada`,
	ADD CONSTRAINT `FK_notificacoes_usuarios` FOREIGN KEY (`usuario_origem`) REFERENCES `usuarios` (`id`) ON UPDATE CASCADE ON DELETE NO ACTION;

ALTER TABLE `notificacoes`
	ADD INDEX `acao_selecionada` (`acao_selecionada`);


ALTER TABLE `notificacoes`
	ADD INDEX `registro_id` (`registro_id`);

ALTER TABLE `notificacoes`
	ADD COLUMN `acao_selecionada_desc` VARCHAR(20) NULL DEFAULT NULL AFTER `acao_selecionada`;


INSERT INTO `notificacoes_motivos` (`id`, `created`, `updated`, `titulo`, `nome`, `permissao`, `grupo`, `titulo_notificacao`, `msg_notificacao`) VALUES (20, '2025-01-02 17:30:54', NULL, 'Resposta de convite de dupla fixa', 'dupla_fixa_padel_resposta', NULL, 'dupla_padel', 'Resposta de parceria', '{{usuario_nome}} {{resposta}}');


CREATE TABLE `estatisticas_padel` (
	`id` INT NOT NULL AUTO_INCREMENT,
	`created` TIMESTAMP NOT NULL,
	`modified` TIMESTAMP NOT NULL,
	`categoria_id` INT NULL DEFAULT NULL,
	`usuario_id` INT NOT NULL,
	`sexo` VARCHAR(20) NULL DEFAULT NULL COLLATE 'utf8mb4_general_ci',
	`vitorias` SMALLINT NOT NULL DEFAULT '0',
	`torneios_participados` SMALLINT NOT NULL DEFAULT '0',
	`torneios_vencidos` SMALLINT NOT NULL DEFAULT '0',
	`finais_perdidas` SMALLINT NOT NULL DEFAULT '0',
	`avancos_de_fase` SMALLINT NOT NULL DEFAULT '0',
	`pontuacao_total` SMALLINT NOT NULL DEFAULT '0',
	PRIMARY KEY (`id`) USING BTREE,
	INDEX `FK_ranking_padel_padel_categorias` (`categoria_id`) USING BTREE,
	INDEX `FK_ranking_padel_usuarios` (`usuario_id`) USING BTREE,
	CONSTRAINT `FK_ranking_padel_padel_categorias` FOREIGN KEY (`categoria_id`) REFERENCES `padel_categorias` (`id`) ON UPDATE CASCADE ON DELETE CASCADE,
	CONSTRAINT `FK_ranking_padel_usuarios` FOREIGN KEY (`usuario_id`) REFERENCES `usuarios` (`id`) ON UPDATE CASCADE ON DELETE CASCADE
)
COLLATE='utf8mb4_general_ci'
ENGINE=InnoDB
;


ALTER TABLE `usuarios_dados_padel`
	ADD COLUMN `localidade` VARCHAR(180) NULL DEFAULT NULL AFTER `dupla_fixa_aprovado`;


ALTER TABLE `buzke_hmlg_app`.`usuarios_dados_padel`
ADD COLUMN `receber_convites` enum('Y','N') NULL DEFAULT 'Y';

ALTER TABLE `buzke_hmlg_app`.`usuarios_dados_padel`
CHANGE `receber_convites` `receber_convites` enum('Y','N') NOT NULL DEFAULT 'Y',
ADD COLUMN `restringir_horarios_convites` enum('Y','N') NOT NULL DEFAULT 'N';


ALTER TABLE `buzke_hmlg_app`.`to_pro_jogo`
CHANGE `localizacao_id` `localizacao_id` int NULL;

CREATE TABLE `seguidores` (
	`id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
	`created` TIMESTAMP NULL DEFAULT NULL,
	`updated` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
	`usuario_seguidor_id` INT NOT NULL,
	`usuario_seguido_id` INT NOT NULL,
	`status` ENUM('ativo','bloqueado','pendente') NULL DEFAULT 'ativo' COLLATE 'utf8mb4_general_ci',
	`interacoes_totais` INT NULL DEFAULT '0',
	`ultima_interacao` DATETIME NULL DEFAULT NULL,
	`deleted` TINYINT(1) NULL DEFAULT '0',
	PRIMARY KEY (`id`) USING BTREE,
	UNIQUE INDEX `id` (`id`) USING BTREE,
	UNIQUE INDEX `usuario_seguidor_id` (`usuario_seguidor_id`, `usuario_seguido_id`) USING BTREE,
	INDEX `FK_seguidores_usuarios_2` (`usuario_seguido_id`) USING BTREE,
	CONSTRAINT `FK_seguidores_usuarios` FOREIGN KEY (`usuario_seguidor_id`) REFERENCES `usuarios` (`id`) ON UPDATE CASCADE ON DELETE CASCADE,
	CONSTRAINT `FK_seguidores_usuarios_2` FOREIGN KEY (`usuario_seguido_id`) REFERENCES `usuarios` (`id`) ON UPDATE CASCADE ON DELETE CASCADE
)
COLLATE='utf8mb4_general_ci'
ENGINE=InnoDB
;



CREATE TABLE `usuarios_bloqueados` (
	`id` INT NOT NULL AUTO_INCREMENT,
	`created` TIMESTAMP NULL DEFAULT NULL,
	`modified` TIMESTAMP NULL DEFAULT NULL,
	`usuario_bloqueador_id` INT NOT NULL,
	`usuario_bloqueado_id` INT NOT NULL,
	PRIMARY KEY (`id`) USING BTREE,
	UNIQUE INDEX `usuario_bloqueador_id_usuario_bloqueado_id` (`usuario_bloqueador_id`, `usuario_bloqueado_id`) USING BTREE,
	INDEX `FK_seguidores_bloqueados_usuarios_2` (`usuario_bloqueado_id`) USING BTREE,
	CONSTRAINT `FK_seguidores_bloqueados_usuarios` FOREIGN KEY (`usuario_bloqueador_id`) REFERENCES `usuarios` (`id`) ON UPDATE CASCADE ON DELETE CASCADE,
	CONSTRAINT `FK_seguidores_bloqueados_usuarios_2` FOREIGN KEY (`usuario_bloqueado_id`) REFERENCES `usuarios` (`id`) ON UPDATE CASCADE ON DELETE CASCADE
)
COLLATE='utf8mb4_general_ci'
ENGINE=InnoDB
AUTO_INCREMENT=11
;



ALTER TABLE `seguidores`
	ADD COLUMN `prev_status` ENUM('ativo','bloqueado','pendente') NULL DEFAULT NULL AFTER `status`;


INSERT INTO `buzke_v2`.`notificacoes_motivos` (`created`, `updated`, `titulo`, `nome`, `grupo`, `titulo_notificacao`, `msg_notificacao`) VALUES ('2025-01-08 09:38:20', '2025-01-08 09:38:20', 'Aceito como seguidor', 'seguidor_aceito', 'seguidor_aceito', '{{seguido_nome}} aceitou seu convite para seguir', '{{seguido_nome}} aceitou seu convite para seguir');

INSERT INTO `buzke_v2`.`notificacoes_motivos` (`created`, `updated`, `titulo`, `nome`, `grupo`, `titulo_notificacao`, `msg_notificacao`) VALUES ('2025-01-08 09:55:56', '2025-01-08 09:55:58', 'Permissão Seguir', 'permissao_seguir', 'permissao_seguir', '{{seguidor_nome}} pediu pra seguir você', '{{seguidor_nome}} pediu pra seguir você');

INSERT INTO `buzke_v2`.`notificacoes_motivos` (`created`, `updated`, `titulo`, `nome`, `grupo`, `titulo_notificacao`, `msg_notificacao`) VALUES ('2025-01-08 09:57:57', '2025-01-08 09:57:58', 'Novo Seguidor', 'novo_seguidor', 'novo_seguidor', '{{seguidor_nome}} está seguindo você', '{{seguidor_nome}} está seguindo você');


ALTER TABLE `usuarios_dados_padel`
	DROP COLUMN `privado`;

ALTER TABLE `usuarios`
	ADD COLUMN `perfil_esportista_privado` ENUM('Y','N') NOT NULL DEFAULT 'N' AFTER `ativo`;


UPDATE usuarios_dados_padel AS udp
INNER JOIN (
    -- Aqui selecionamos a última localização de cada usuário
    SELECT ul.usuario_id, ul.description
    FROM usuarios_localizacoes ul
    INNER JOIN (
        SELECT usuario_id, MAX(created) AS max_created
        FROM usuarios_localizacoes
        GROUP BY usuario_id
    ) AS ult
    ON ul.usuario_id = ult.usuario_id
       AND ul.created = ult.max_created
) AS ultima
ON udp.usuario_id = ultima.usuario_id
SET udp.localidade = ultima.description;


UPDATE usuarios_dados_padel SET usuarios_dados_padel.localidade = 'SantAna do Livramento, RS, Brasil' WHERE localidade = 'Santana do Livramento - SantAna do Livramento, RS, Brasil'

UPDATE usuarios_dados_padel SET usuarios_dados_padel.localidade = 'SantAna do Livramento, RS, Brasil' WHERE localidade = "Santana do Livramento - Sant'Ana do Livramento, RS, Brasil"

UPDATE usuarios_dados_padel SET usuarios_dados_padel.localidade = 'SantAna do Livramento, RS, Brasil' WHERE localidade = "Sant'Ana do Livramento, RS, Brasil"

UPDATE usuarios_dados_padel SET usuarios_dados_padel.localidade = "Sant'Ana do Livramento, RS, Brasil" WHERE localidade = "SantAna do Livramento, RS, Brasil"